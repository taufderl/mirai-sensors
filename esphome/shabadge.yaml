# SHA2017 Badge
# Code by Steffen

substitutions:
  name: esphome-web-132a98
  friendly_name: SHAbadge

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  name_add_mac_suffix: false

esp32:
  board: esp32-pro
#  framework:
#    type: arduino

# Enable logging
logger:
  level: WARN

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
  - platform: esphome
    password: !secret ota_password

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  # too big for memory so ditch it
#  ap:
#    ssid: "ShaBadge"
#    password: "FNU43Wvx8tW9"


# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:


# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
# too big for memory so ditch it
#esp32_improv:
#  authorizer: none

# To have a "next url" for improv serial
#web_server:


i2c:
  sda: 26
  scl: 27
  scan: True

mpr121:
  id: mpr121_component
  address: 0x5A
  touch_debounce: 1
  release_debounce: 1
  touch_threshold: 10
  release_threshold: 7

output:
  - id: led_power
    platform: gpio
    pin:
      mpr121: mpr121_component
      number: 10
      mode: OUTPUT
      inverted: true   

  - id: buzzer_power
    platform: gpio
    pin:
      mpr121: mpr121_component
      number: 8
      mode: OUTPUT
#      inverted: True
      


binary_sensor:
  - platform: mpr121
    id: touch_buttonA
    channel: 0
    name: "Touch Button A"
  - platform: mpr121
    id: touch_buttonB
    channel: 1
    name: "Touch Button B"
  - platform: mpr121
    id: touch_buttonStart
    channel: 2
    name: "Touch Button Start"
  - platform: mpr121
    id: touch_buttonSelect
    channel: 3
    name: "Touch Button Select"
  - platform: mpr121
    id: touch_buttonDown
    channel: 4
    name: "Touch Button Down"
    on_press: 
      then:
        - output.turn_on: buzzer_power          
        - delay: 500ms
        - output.turn_off: buzzer_power



  - platform: mpr121
    id: touch_buttonRight
    channel: 5
    name: "Touch Button Right"
  - platform: mpr121
    id: touch_buttonUp
    channel: 6
    name: "Touch Button Up"
  - platform: mpr121
    id: touch_buttonLeft
    channel: 7
    name: "Touch Button Left"
#  - platform: mpr121
#    id: charging_status
#    channel: 9
#    name: "Charging Status"
  - platform: gpio
    name: "Flash Button"
    pin: 0
    filters:
      - invert:

sensor:
  - platform: adc
    pin: 34
    #attenuation: 6db
    attenuation: auto
    filters:
      - multiply: 2.91
    name: "USB Voltage"
    update_interval: 20s
    accuracy_decimals: 1
  - platform: adc
    pin: 35
    attenuation: auto
    #attenuation: 6db
    #attenuation: 2.5db
    filters:
      - multiply: 2.91
      #- multiply: 1.95
    name: "Battery Voltage"
    update_interval: 30s
    accuracy_decimals: 1
    id: battery_voltage

  - platform: homeassistant
    id: slaapkamer_temp_voor_esp
    entity_id: sensor.study_temperature
    internal: True    

#  - platform: uptime
#    name: Uptime Sensor
#    id: uptime_sensor
#    update_interval: 1s
#    on_raw_value:
#      then:
#        - text_sensor.template.publish:
#            id: uptime_human
#            state: !lambda |-
#              int seconds = round(id(uptime_sensor).raw_state);
#              int days = seconds / (24 * 3600);
#              seconds = seconds % (24 * 3600);
#              int hours = seconds / 3600;
#              seconds = seconds % 3600;
#              int minutes = seconds /  60;
#              seconds = seconds % 60;
#              return (
#                (days ? to_string(days) + "d " : "") +
#                (hours ? to_string(hours) + "h " : "") +
#                (minutes ? to_string(minutes) + "m " : "") +
#                (to_string(seconds) + "s")
#              ).c_str();

spi:
  clk_pin: 18
  mosi_pin: 5

text_sensor:
  - platform: version
    id: ver
    hide_timestamp: true
#  - platform: template
#    name: Uptime Human Readable
#    id: uptime_human
#    icon: mdi:clock-start

graph:
#  - id: Liion_badge_battery
#    duration: 1h
#    width: 290
#    height: 64
#    traces:
#      - sensor: battery_voltage
#        line_type: SOLID
#        line_thickness: 2
   - id: study_temperature
     duration: 12h
     width: 290
     height: 64
     traces: 
       - sensor: slaapkamer_temp_voor_esp
         line_type: SOLID
         line_thickness: 2
 

display:
  - platform: waveshare_epaper
    cs_pin: 19
    dc_pin: 21
    busy_pin: 22
    reset_pin: 23
    model: 2.90in-dke
    #Partial not working yet so full only
    full_update_every: 1
    update_interval: 60s
    lambda: |-
      it.printf(0, 0, id(font_small), "%s", id(ver).state.c_str());
      it.strftime(180, 0, id(font40), "%H:%M", id(esptime).now());
      it.graph(4, 64, id(study_temperature));
      it.printf(0,80, id(font_big), "%.1f Â°C", id(slaapkamer_temp_voor_esp).state);
#      it.graph(4, 64, id(Liion_badge_battery));
#      it.printf(0, 40, id(font40), "%s", id(uptime_human).state.c_str());
#      it.printf(0, 40, id(font40), "%s", id(battery_voltage).state.c_str());
      
    rotation: 270

#external_components:
#  - source:
#      type: git
#      url: https://github.com/Nizzle/esphome
#      ref: dke2.9-epaper
#    components: [ waveshare_epaper ]

font:
#  - file: "Fonts/Comfortaa-Regular.ttf"
  - file: "gfonts://Comfortaa"
    id: font40
    size: 40
  - file: "gfonts://Roboto"
    id: font_big
    size: 32
  - file: "gfonts://Roboto"
    id: font_small
    size: 18

time:
  - platform: homeassistant
    id: esptime

button:
  - platform: output
    name: buzzer
    output: buzzer_power
    duration: 4000ms
    icon: mdi:vibrate

light:
  - platform: neopixelbus
    type: GRBW
    variant: sk6812
    pin: 32
    num_leds: 6
    name: badge_leds
    id: badge_leds
    icon: mdi:ledstrip
    effects:
      - addressable_color_wipe:      
      - addressable_color_wipe:
          name: custom color wipe
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              white: 0%
              num_leds: 2
      - addressable_rainbow: 
      - addressable_scan:
      - addressable_random_twinkle:
      - addressable_twinkle:
      - addressable_fireworks:

   
  - platform: partition
    name: "Partition Light 1"
    segments:
      - id: badge_leds
        from: 0
        to: 0

  - platform: partition
    name: "Partition Light 2"
    segments:
      - id: badge_leds
        from: 1
        to: 1
          
  - platform: partition
    name: "Partition Light 3"
    segments:
      - id: badge_leds
        from: 2
        to: 2

  - platform: partition
    name: "Partition Light 4"
    segments:
      - id: badge_leds
        from: 3
        to: 3

  - platform: partition
    name: "Partition Light 5"
    segments:
      - id: badge_leds
        from: 4
        to: 4

  - platform: partition
    name: "Partition Light 6"
    segments:
      - id: badge_leds
        from: 5
        to: 5
